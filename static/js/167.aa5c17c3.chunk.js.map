{"version":3,"file":"static/js/167.aa5c17c3.chunk.js","mappings":"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","sources":["assets/arrows.svg","Components/Data.jsx"],"sourcesContent":["var _g, _g2, _g3;\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nimport * as React from \"react\";\nfunction SvgArrows(_ref, svgRef) {\n  let {\n    title,\n    titleId,\n    ...props\n  } = _ref;\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#0c2428\",\n    width: \"64px\",\n    height: \"64px\",\n    viewBox: \"-46.08 -46.08 348.16 348.16\",\n    id: \"Flat\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    stroke: \"#0c2428\",\n    strokeWidth: 0.00256,\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_bgCarrier\",\n    strokeWidth: 0,\n    transform: \"translate(0,0), scale(1)\"\n  }, /*#__PURE__*/React.createElement(\"rect\", {\n    x: -46.08,\n    y: -46.08,\n    width: 348.16,\n    height: 348.16,\n    rx: 174.08,\n    fill: \"#f5a623\",\n    strokeWidth: 0\n  }))), _g2 || (_g2 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_tracerCarrier\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\",\n    stroke: \"#CCCCCC\",\n    strokeWidth: 2.048\n  })), _g3 || (_g3 = /*#__PURE__*/React.createElement(\"g\", {\n    id: \"SVGRepo_iconCarrier\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M213.65723,181.65723l-32,32A8.00038,8.00038,0,0,1,168,208V184H48a8,8,0,0,1,0-16H168V144a8.00038,8.00038,0,0,1,13.65723-5.65723l32,32A8.00122,8.00122,0,0,1,213.65723,181.65723Zm-139.31446-64A8.00038,8.00038,0,0,0,88,112V88H208a8,8,0,0,0,0-16H88V48a8.00038,8.00038,0,0,0-13.65723-5.65723l-32,32a8.00122,8.00122,0,0,0,0,11.31446Z\"\n  }))));\n}\nconst ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrows);\nexport default __webpack_public_path__ + \"static/media/arrows.fb25130ec5d6552cb043a58b3f0df97a.svg\";\nexport { ForwardRef as ReactComponent };","import { useState, useMemo } from \"react\";\r\nimport \"../CSS/Data.css\";\r\nimport arrows from \"../assets/arrows.svg\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { AgGridReact } from \"ag-grid-react\";\r\nimport \"ag-grid-community/styles/ag-grid.css\";\r\nimport \"ag-grid-community/styles/ag-theme-alpine.css\";\r\nimport { useAuth } from \"../Context/AuthContext\";\r\n\r\nconst Data = () => {\r\n  const {\r\n    fromDate,\r\n    setFromDate,\r\n    toDate,\r\n    setToDate,\r\n    CustomInput,\r\n    rowData,\r\n    clientData,\r\n    machineData,\r\n  } = useAuth();\r\n\r\n  console.log(\"clientData in Data COmp: \", clientData);\r\n  console.log(\"machineData in data COmp: \", machineData);\r\n\r\n  const [colDefs] = useState([\r\n    { field: \"athlete\", filter: \"agTextColumnFilter\", tooltipField: \"country\" },\r\n    { field: \"age\", filter: \"agNumberColumnFilter\" },\r\n    { field: \"country\", filter: \"agTextColumnFilter\" },\r\n    {\r\n      field: \"date\",\r\n      filter: \"agDateColumnFilter\",\r\n      filterParams: {\r\n        comparator: function (filterLocalDateAtMidnight, cellValue) {\r\n          var dateParts = cellValue.split(\"/\");\r\n          var cellDate = new Date(\r\n            Number(dateParts[2]),\r\n            Number(dateParts[1]) - 1,\r\n            Number(dateParts[0])\r\n          );\r\n          if (filterLocalDateAtMidnight.getTime() === cellDate.getTime()) {\r\n            return 0;\r\n          }\r\n          if (cellDate < filterLocalDateAtMidnight) {\r\n            return -1;\r\n          }\r\n          if (cellDate > filterLocalDateAtMidnight) {\r\n            return 1;\r\n          }\r\n        },\r\n      },\r\n    },\r\n  ]);\r\n\r\n  const defaultColDef = useMemo(\r\n    () => ({\r\n      suppressMovable: true,\r\n      sortable: true,\r\n      filter: true,\r\n      floatingFilter: true,\r\n      filterParams: {\r\n        debounceMs: 200,\r\n      },\r\n      flex: 1,\r\n      minWidth: 100,\r\n      resizable: true,\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <main className=\"data-logs\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-12\">\r\n            <h1 className=\"text-center data-title\">Game Log</h1>\r\n          </div>\r\n        </div>\r\n        <div className=\"data-logs-body\">\r\n          <div className=\"mb-3 row\">\r\n            <label\r\n              htmlFor=\"staticEmail\"\r\n              className=\"col-sm-2 col-form-label data-label\"\r\n            >\r\n              Company\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <select\r\n                className=\"form-select data-select\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                {clientData.map((client) => {\r\n                  return (\r\n                    <option key={client.id} value={client.id}>\r\n                      {client.clientName}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3 row\">\r\n            <label\r\n              htmlFor=\"staticEmail\"\r\n              className=\"col-sm-2 col-form-label data-label\"\r\n            >\r\n              Machine\r\n            </label>\r\n            <div className=\"col-sm-10\">\r\n              <select\r\n                className=\"form-select data-select\"\r\n                aria-label=\"Default select example\"\r\n              >\r\n                {machineData.map((machine) => {\r\n                  return (\r\n                    <option key={machine.id} value={machine.id}>\r\n                      {machine.machineId}\r\n                    </option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3 row\">\r\n            <div className=\"col-lg-5 col-md-4 col-sm-2\">\r\n              <div className=\"Date-container fromDate-container\">\r\n                <label htmlFor=\"fromDate\" className=\"date-label\">\r\n                  From Date\r\n                </label>\r\n                <DatePicker\r\n                  id=\"fromDate\"\r\n                  selected={fromDate}\r\n                  onChange={(date) => setFromDate(date)}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  customInput={<CustomInput />}\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-2 col-md-1 col-sm-1\">\r\n              <div className=\"d-flex justify-content-center align-items-center\">\r\n                <img src={arrows} alt=\"arrows\" className=\"arrows\" />\r\n              </div>\r\n            </div>\r\n            <div className=\"col-lg-5 col-md-4 col-sm-1\">\r\n              <div className=\"Date-container\">\r\n                <label htmlFor=\"toDate\" className=\"date-label to-label\">\r\n                  To Date\r\n                </label>\r\n                <DatePicker\r\n                  id=\"toDate\"\r\n                  selected={toDate}\r\n                  onChange={(date) => setToDate(date)}\r\n                  dateFormat=\"dd/MM/yyyy\"\r\n                  customInput={<CustomInput />}\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"mb-3 row justify-content-center\">\r\n            <div className=\"col-lg-4 col-md-2 col-sm-2 col-12 d-flex justify-content-center\">\r\n              <button\r\n                className=\"btn btn-primary px-4 py-1 rounded-pill btn-datas\"\r\n                type=\"button\"\r\n              >\r\n                Show Data\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3 row mt-5\">\r\n          <div className=\"ag-theme-alpine\">\r\n            <AgGridReact\r\n              popupParent={document.body}\r\n              rowData={rowData}\r\n              columnDefs={colDefs}\r\n              defaultColDef={defaultColDef}\r\n              animateRows={true}\r\n              pagination={true}\r\n              paginationPageSize={10}\r\n              paginationPageSizeSelector={false}\r\n              paginationAutoPageSize={false}\r\n              domLayout=\"autoHeight\"\r\n            ></AgGridReact>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default Data;\r\n"],"names":["Data","fromDate","setFromDate","toDate","setToDate","CustomInput","rowData","clientData","machineData","useAuth","console","log","colDefs","useState","field","filter","tooltipField","filterParams","comparator","filterLocalDateAtMidnight","cellValue","dateParts","split","cellDate","Date","Number","getTime","defaultColDef","useMemo","suppressMovable","sortable","floatingFilter","debounceMs","flex","minWidth","resizable","_jsx","className","children","_jsxs","htmlFor","map","client","value","id","clientName","machine","machineId","DatePicker","selected","onChange","date","dateFormat","customInput","src","arrows","alt","type","AgGridReact","popupParent","document","body","columnDefs","animateRows","pagination","paginationPageSize","paginationPageSizeSelector","paginationAutoPageSize","domLayout"],"sourceRoot":""}